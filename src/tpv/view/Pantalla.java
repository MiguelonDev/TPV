package tpv.view;

/*
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JLabel;
import tpv.dao.ProductosDAO;
*/
/**
 * Clase que genera la pantalla y gestiona las acciones de los botones y demás elementos
 * 
 * Se ha generado de forma automática para tener una referencia pero no se va a usar en la aplicación
 * Una vez conseguida una pantalla estable generada con lo aprendido de ésta, se comentará el código
 *
 * @author miguel.aguirre
 */
//public class Pantalla extends javax.swing.JFrame implements ActionListener{

    /**
	 * 
	 */
//	private static final long serialVersionUID = 366073131140407126L;
	/**
     * Creates new form Frame
	 * @throws SQLException 
     */
//    public Pantalla() throws SQLException {
//        initComponents();
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws SQLException 
     */
//    private void initComponents() throws SQLException {
    	
/*    	ProductosDAO lista = new ProductosDAO();
    	
    	

    	precioUnitario = new JLabel();
        elemento01 = new JButton();
        elemento02 = new JButton();
        elemento03 = new JButton();
        elemento04 = new JButton();
        elemento05 = new JButton();
        elemento06 = new JButton();
        elemento07 = new JButton();
        elemento08 = new JButton();
        elemento09 = new JButton();
        elemento10 = new JButton();
        elemento11 = new JButton();
        elemento12 = new JButton();
        elemento13 = new JButton();
        elemento14 = new JButton();
        subtotal = new JLabel();
        titulo = new JLabel();
        total = new JLabel();
        impuestos = new JLabel();
        Aceptar = new JButton();
        Limpiar = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        precioUnitario.setText("0");
        
        

        elemento01.setText(lista.findById(1L).getNombre());
        elemento01.setActionCommand(lista.findById(1L).getNombre());
        elemento01.addActionListener(this);
        elemento01.setPreferredSize(new Dimension(20, 100));
        
        elemento02.setText(lista.findById(2L).getNombre());
        elemento02.setActionCommand(lista.findById(2L).getNombre());
        elemento02.addActionListener(this);

        elemento03.setText(lista.findById(3L).getNombre());
        elemento03.setActionCommand(lista.findById(3L).getNombre());
        elemento03.addActionListener(this);

        elemento04.setText(lista.findById(4L).getNombre());
        elemento04.setActionCommand(lista.findById(4L).getNombre());
        elemento04.addActionListener(this);

        elemento05.setText(lista.findById(5L).getNombre());
        elemento05.setActionCommand(lista.findById(5L).getNombre());
        elemento05.addActionListener(this);

        elemento06.setText(lista.findById(6L).getNombre());
        elemento06.setActionCommand(lista.findById(6L).getNombre());
        elemento06.addActionListener(this);

        elemento07.setText(lista.findById(7L).getNombre());
        elemento07.setActionCommand(lista.findById(7L).getNombre());
        elemento07.addActionListener(this);

        elemento08.setText(lista.findById(8L).getNombre());
        elemento08.setActionCommand(lista.findById(8L).getNombre());
        elemento08.addActionListener(this);

        elemento09.setText(lista.findById(9L).getNombre());
        elemento09.setActionCommand(lista.findById(9L).getNombre());
        elemento09.addActionListener(this);

        elemento10.setText(lista.findById(10L).getNombre());
        elemento10.setActionCommand(lista.findById(10L).getNombre());
        elemento10.addActionListener(this);

        elemento11.setText(lista.findById(11L).getNombre());
        elemento11.setActionCommand(lista.findById(11L).getNombre());
        elemento11.addActionListener(this);

        elemento12.setText(lista.findById(12L).getNombre());
        elemento12.setActionCommand(lista.findById(12L).getNombre());
        elemento12.addActionListener(this);

        elemento13.setText(lista.findById(13L).getNombre());
        elemento13.setActionCommand(lista.findById(13L).getNombre());
        elemento13.addActionListener(this);

        elemento14.setText(lista.findById(14L).getNombre());
        elemento14.setActionCommand(lista.findById(14L).getNombre());
        elemento14.addActionListener(this);

        for(int i = 0; i<14; i++) {
        	
        }
        
        subtotal.setText("0");

        titulo.setText("TPV Miguel Aguirre Varela");
        

        total.setText("");

        impuestos.setText("");

        Aceptar.setText("Aceptar");
        Aceptar.setActionCommand("Aceptar"); 
        Aceptar.addActionListener(this);

        Limpiar.setText("Limpiar");
        Limpiar.setActionCommand("Limpiar"); 
        Limpiar.addActionListener(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, true)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(precioUnitario)
                        .addGap(200, 200, 200)
                        .addComponent(elemento01)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(elemento02))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(elemento03)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(elemento04))
                    .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(impuestos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(elemento05)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elemento06))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(elemento07)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elemento08))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Aceptar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(elemento11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elemento12))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Limpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(elemento13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elemento14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(elemento10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(elemento09)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elemento01)
                    .addComponent(elemento02)
                    .addComponent(precioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elemento03)
                    .addComponent(elemento04)
                    .addComponent(subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(elemento05)
                            .addComponent(elemento06))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(elemento07)
                            .addComponent(elemento08))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(elemento10)
                            .addComponent(elemento09))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(elemento11)
                            .addComponent(elemento12)
                            .addComponent(Aceptar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(elemento13)
                            .addComponent(elemento14)
                            .addComponent(Limpiar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(impuestos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>
*/
    /**
     * @param args the command line arguments
     */
/*    public static void main(String args[]) {

    	Pantalla pantalla;
		try {
			pantalla = new Pantalla();
			pantalla.setVisible(true);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
 
    }
    
    // Variables declaration - do not modify
    private javax.swing.JButton elemento01;
    private javax.swing.JButton elemento10;
    private javax.swing.JButton elemento11;
    private javax.swing.JButton elemento12;
    private javax.swing.JButton elemento13;
    private javax.swing.JButton elemento14;
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton elemento02;
    private javax.swing.JButton elemento03;
    private javax.swing.JButton elemento04;
    private javax.swing.JButton elemento05;
    private javax.swing.JButton elemento06;
    private javax.swing.JButton elemento07;
    private javax.swing.JButton elemento08;
    private javax.swing.JButton elemento09;
    private javax.swing.JLabel titulo;
    private javax.swing.JLabel precioUnitario;
    private javax.swing.JLabel subtotal;
    private javax.swing.JLabel total;
    private javax.swing.JLabel impuestos;
    // End of variables declaration

    public void accionBotones(ActionEvent evt) {
    	
    	ProductosDAO lista = new ProductosDAO();
		try {
			if(evt.getActionCommand().equals(lista.findById(1L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(1L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(1L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(2L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(2L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(2L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(3L).getNombre())) {
							
				precioUnitario.setText(Double.toString(lista.findById(3L).getPrecio()));
							
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(3L).getPrecio());
							
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(4L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(4L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(4L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(5L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(5L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(5L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(6L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(6L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(6L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(7L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(7L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(7L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(8L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(8L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(8L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(9L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(9L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(9L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(10L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(10L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(10L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			
			if(evt.getActionCommand().equals(lista.findById(11L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(11L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(11L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}

			if(evt.getActionCommand().equals(lista.findById(12L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(12L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(12L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			if(evt.getActionCommand().equals(lista.findById(13L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(13L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(13L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
			if(evt.getActionCommand().equals(lista.findById(14L).getNombre())) {
				
				precioUnitario.setText(Double.toString(lista.findById(14L).getPrecio()));
				
				double precio = (Double.parseDouble(subtotal.getText())) + (lista.findById(14L).getPrecio());
				
				subtotal.setText(Double.toString(precio));
			}
					
		} catch (SQLException e) {
			
			System.err.println(e.getMessage());
			
		}
    	
    }

	@Override
	public void actionPerformed(ActionEvent evt) {
		
		if(evt.getActionCommand().equals("Aceptar")) {
			
			double sumatorio = Double.parseDouble(subtotal.getText());
			double tasas = sumatorio * 0.16;
			sumatorio += tasas;
			
			impuestos.setText(Double.toString(tasas) + "<- 16% del subtotal");
			total.setText(Double.toString(sumatorio) + "<- total con impuestos");
			
		}
		
		if(evt.getActionCommand().equals("Limpiar")) {
			impuestos.setText("");
			subtotal.setText("0");
			precioUnitario.setText("0");
			total.setText("");
			
			
		}
		
		// método para todos los demás botones
		accionBotones(evt);
		
		
	}
}

*/
